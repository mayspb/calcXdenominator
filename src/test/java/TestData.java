import org.testng.annotations.DataProvider;

public class TestData {

    //region numberOver1024digits
    final private static String numberOver1024digits =

    //endregion

    @DataProvider(name = "getData")
    public static Object[][] getData() {
        return new Object[][]{
                {"1", 1.0},
                {"1000", 0.001},
                {"1000d", 0.001},
                {"-500", -0.002},
                {".123", 8.130081300813009},
                {"0.00001", 99999.99999999999},
                {"3.14", 0.3184713375796178},
                {"3.14f", 0.3184713375796178},
                {"12.34D", 0.08103727714748785},
                {"12.34F", 0.08103727714748785},
                {"12.34E1", 0.008103727714748784},
                {"12.34E1d", 0.008103727714748784},
                {"12.34e1", 0.008103727714748784},
                {"12.34e12", 8.103727714748784E-14},
                {"12.34e123", 8.103727714748784E-125},
                {"12.34e1234", 0.0},
                {"12.34e1234567890", 0.0},
                {"12.34e-1", 0.8103727714748784},
                {"12.34e-12", 8.103727714748785E10},
                {"12.34e-12f", 8.103727714748785E10},
                {"12.34e-123", 8.103727714748785E121},
                {"12.34e-1234", Double.POSITIVE_INFINITY},
                {"12.34e-12345", Double.POSITIVE_INFINITY},
                {"0", Double.POSITIVE_INFINITY},
                {"-0", Double.NEGATIVE_INFINITY},
                {"+0", Double.POSITIVE_INFINITY},
                {"0d", Double.POSITIVE_INFINITY},
                {"0f", Double.POSITIVE_INFINITY},
                {String.valueOf(Long.MIN_VALUE), -1.0842021724855044E-19},
                {"-9223372036854775809", -1.0842021724855044E-19},
                {String.valueOf(Long.MAX_VALUE), 1.0842021724855044E-19},
                {"9223372036854775808", 1.0842021724855044E-19},
                {String.valueOf(Double.MIN_VALUE), Double.POSITIVE_INFINITY},
                {"4.9E-325", Double.POSITIVE_INFINITY},
                {String.valueOf(Double.MAX_VALUE), 5.562684646268003E-309},
                {"1.7976931348623157E309", 0.0},
                {String.valueOf(Double.MIN_NORMAL), 4.49423283715579E307},
                {"2.2250738585072014E-309", Double.POSITIVE_INFINITY},
                {numberOver1024digits, 0.0},
                {String.valueOf(Double.NaN), Double.NaN},

                {"", "rejection"},
                {" ", "rejection"},
                {"10L", "rejection"},
                {"1+1", "rejection"},
                {"3*2", "rejection"},
                {"5^2", "rejection"},
                {"10%5", "rejection"},
                {"4-2", "rejection"},
                {"12 34", "rejection"},
                {"12,34", "rejection"},
                {"12.34dd", "rejection"},
                {"12.345.67", "rejection"},
                {"12.345,67", "rejection"},
                {"12,345.67", "rejection"},
                {"test", "rejection"},
                {"123 test", "rejection"},
                {"!@#$%^&*()", "rejection"},
                {"+", "rejection"},
                {"-", "rejection"},
                {"NaNNaN", "rejection"},
                {"true", "rejection"},
//            TODO: реализовать обработку спецсимволов, т.к. в зависимости от среды запуска тест может не проходить
//            При этом валидацию эти символы не пройдут, т.е. на вход функции вычисления они поданы не будут
//            ☺☻♥♦♣♠•◘○◙♂♀♪♫☼►◄↕‼¶§▬↨↑↓→←∟↔▲▼ ⌂
//            Коды символов: 0-32, 127, 176-223, 242-255
                {"☺", "rejection"},
                {"\\U0001", "rejection"}
        };
    }

}
